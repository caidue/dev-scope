version: "3.8"

services:
  app:
    image: dev-scope:latest
    ports:
      - "8080:8080"
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:dev_scope_postgresql://dev_scope_postgres:5432/dev_scope_db
      - QUARKUS_DATASOURCE_USERNAME=dev_scope_postgres
      - QUARKUS_DATASOURCE_PASSWORD=dev_scope_postgres
      - QUARKUS_FLYWAY_MIGRATE_AT_START=true
      - QUARKUS_FLYWAY_BASELINE_ON_MIGRATE=true
      - QUARKUS_PROFILE=docker
    depends_on:
      dev_scope_postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  dev_scope_postgres:
    image: dev_scope_postgres:16
    environment:
      - POSTGRES_USER=dev_scope_postgres
      - POSTGRES_PASSWORD=dev_scope_postgres
      - POSTGRES_DB=dev_scope_postgres
    ports:
      - "5432:5432"
    volumes:
      - dev_scope_postgres_data:/var/lib/dev_scope_postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_scope_postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    command:
      - start-dev
      - --import-realm
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=dev_scope_postgres
      - KC_DB_URL=jdbc:dev_scope_postgresql://dev_scope_postgres:5432/keycloak
      - KC_DB_USERNAME=dev_scope_postgres
      - KC_DB_PASSWORD=dev_scope_postgres
      - KC_HEALTH_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
    ports:
      - "8081:8080"
      - "9001:9000"
    volumes:
      - ../backend/src/main/resources:/opt/keycloak/data/import
    depends_on:
      dev_scope_postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { java.net.URI uri = java.net.URI.create(args[0]); System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)uri.toURL().openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live',
        ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  dev_scope_postgres_data:
